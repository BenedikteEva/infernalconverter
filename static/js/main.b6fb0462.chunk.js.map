{"version":3,"sources":["utils/ReactToPrint.js","App.js","fonts/barazhad-font/BarazhadBold-LGZZ.ttf","fonts/barazhad-font/BarazhadBoldItalic-XMWd.ttf","fonts/barazhad-font/Barazhad-PlXr.ttf","index.js"],"names":["ReactToPrint","props","reload","a","window","location","removeWindow","target","setTimeout","parentNode","removeChild","triggerPrint","onBeforePrint","onAfterPrint","setState","alertIfIeOrEdge","contentWindow","focus","print","handlePrint","isIE7","navigator","userAgent","indexOf","isEdge","isSpartan","isIE","alert","Screen","width","bodyClass","content","copyStyles","pageStyle","contentEl","undefined","console","error","printWindow","document","createElement","isLoading","style","position","top","left","contentNodes","findDOMNode","linkNodes","querySelectorAll","linkTotal","length","linksLoaded","linksErrored","markLoaded","linkNode","loaded","push","onload","domDoc","contentDocument","srcCanvasEls","open","write","outerHTML","close","defaultPageStyle","styleEl","appendChild","createTextNode","head","body","classList","add","canvasEls","forEach","node","index","getContext","drawImage","headEls","tagName","newHeadEl","sheet","styleCSS","i","cssRules","cssText","setAttribute","attributes","hrefAttr","filter","attr","nodeName","nodeValue","bind","onerror","warn","setRef","ref","triggerRef","state","data","trigger","this","React","cloneElement","onClick","Component","defaultProps","App","handleChange","evt","id","value","handleDismiss","visible","handleAbout","message","className","href","written","header","Menu","Item","bordered","color","Icon","name","forwardRef","outerWidth","Grid","columns","Row","Column","type","defaultValue","onChange","Message","compact","onDismiss","el","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b6fb0462.chunk.js","sourcesContent":["import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n/** this code is borrowed from https://github.com/gregnb/react-to-print. It worked fine in the beginning \r\n * and then the reposistory owner converted the module to typescript which caused lots of trouble and bugs\r\n */\r\nclass ReactToPrint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\ndata:props.data\r\n\r\n    }\r\n  }\r\nstatic propTypes = {\r\n  /** Copy styles over into print window. default: true */\r\n  copyStyles: PropTypes.bool,\r\n  /** Trigger action used to open browser print */\r\n  trigger: PropTypes.func.isRequired,\r\n  /** Content to be printed */\r\n  content: PropTypes.func.isRequired,\r\n  /** Callback function to trigger before print */\r\n  onBeforePrint: PropTypes.func,\r\n  /** Callback function to trigger after print */\r\n  onAfterPrint: PropTypes.func,\r\n  /** Override default print window styling */\r\n  pageStyle: PropTypes.string,\r\n  /** Optional class to pass to the print window body */\r\n  bodyClass: PropTypes.string,\r\n};\r\n\r\nstatic defaultProps = {\r\n  bodyClass: '',\r\n  copyStyles: true,\r\n  onAfterPrint: undefined,\r\n  onBeforePrint: undefined,\r\n  pageStyle: undefined,\r\n};\r\n\r\n\r\nasync  componentDidMount() {\r\n \r\n}\r\n\r\nreload=async()=> {\r\nwindow.location.reload();\r\n}\r\n  removeWindow = (target) => {\r\n    setTimeout(() => {\r\n      target.parentNode.removeChild(target);\r\n    }, 1500);\r\n  }\r\n\r\n  triggerPrint = (target) => {\r\n    const { onBeforePrint, onAfterPrint } = this.props;\r\n\r\n    this.setState({target})\r\n    this.alertIfIeOrEdge(); \r\n    \r\n    if (onBeforePrint) {\r\n      onBeforePrint();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      \r\n      target.contentWindow.focus();\r\n      target.contentWindow.print();\r\n      this.removeWindow(target);\r\n\r\n      if (onAfterPrint) {\r\n        onAfterPrint();\r\n      }\r\n    }, 1500);\r\n  }\r\n\r\n  handlePrint = () => {\r\n    const isIE7 = window.navigator.userAgent.indexOf('Trident/7.0') > -1;\r\n    const isEdge = window.navigator.userAgent.indexOf('Edge') > -1;\r\n    const isSpartan = window.navigator.userAgent.indexOf('Spartan') > -1;\r\n    const isIE = window.navigator.userAgent.indexOf('Trident') > -1;\r\n    if (window.navigator.userAgent.indexOf('Mobile')>-1){\r\n\r\n      alert(\"Vi kan se at du ser dit karakterark pÃ¥ en mobil enhed. Du kan kun se dine karakterer, ikke udskrive. Hvis du vil udskrive et officielt karakterark skal du gÃ¸re det fra en enhed med en stÃ¸rre skÃ¦rm sÃ¥som en Pc eller Mac\");\r\n    } \r\n if(Screen.width<600){\r\n  alert(\"Vi kan se at du ser dit karakterark pÃ¥ en mobil enhed. Du kan kun se dine karakterer, ikke udskrive. Hvis du vil udskrive et officielt karakterark skal du gÃ¸re det fra en enhed med en stÃ¸rre skÃ¦rm sÃ¥som en Pc eller Mac\");\r\n }\r\n    if (isIE === true) {\r\n      alert(\"Internet Explorer kan ikke printe karakterark. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n    }\r\n    if (isIE7 === true) {\r\n      alert(\"Internet Explorer kan ikke printe karakterark. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n    }\r\n    if (isEdge === true) {\r\n      alert(\"Edge og Internet Explorer kan ikke printe karakterark med de nÃ¸dvendige indstillinger. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n\r\n    }\r\n    if (isSpartan === true) {\r\n      alert(\"Edge og Internet Explorer kan ikke printe karakterark med de nÃ¸dvendige indstillinger. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n\r\n    }\r\n    else{\r\n   \r\n    const {\r\n      bodyClass,\r\n      content,\r\n      copyStyles,\r\n      pageStyle,\r\n    } = this.props;\r\n\r\n    const contentEl = content();\r\n        if (contentEl === undefined) {\r\n      console.error(\"Refs are not available for stateless components. For 'react-to-print' to work only Class based components can be printed\"); // eslint-disable-line no-console\r\n      return;\r\n    }\r\n\r\n    const printWindow = document.createElement('iframe');\r\n   \r\n    this.setState({ isLoading: false })\r\n    printWindow.style.position = 'absolute';\r\n    printWindow.style.top = '-1000px';\r\n    printWindow.style.left = '-1000px';\r\n   \r\n    const contentNodes = findDOMNode(contentEl);\r\n    const linkNodes = document.querySelectorAll('link[rel=\"stylesheet\"]');\r\n\r\n    this.linkTotal = linkNodes.length || 0;\r\n    this.linksLoaded = [];\r\n    this.linksErrored = [];\r\n\r\n    const markLoaded = (linkNode, loaded) => {\r\n      if (loaded) {\r\n        this.linksLoaded.push(linkNode);\r\n      } else {\r\n        console.error(\"'react-to-print' was unable to load a link. It may be invalid. 'react-to-print' will continue attempting to print the page. The link the errored was:\", linkNode); // eslint-disable-line no-console\r\n        this.linksErrored.push(linkNode);\r\n      }\r\n\r\n      // We may have errors, but attempt to print anyways - maybe they are trivial and the user will\r\n      // be ok ignoring them\r\n      if (this.linksLoaded.length + this.linksErrored.length === this.linkTotal) {\r\n        this.triggerPrint(printWindow);\r\n      }\r\n    };\r\n\r\n    printWindow.onload = () => {\r\n      /* IE11 support */\r\n      if (window.navigator && window.navigator.userAgent.indexOf('Trident') > -1) {\r\n        printWindow.onload = null;\r\n      }\r\n      \r\n\r\n      const domDoc = printWindow.contentDocument || printWindow.contentWindow.document;\r\n      const srcCanvasEls = [...contentNodes.querySelectorAll('canvas')];\r\n\r\n      domDoc.open();\r\n      domDoc.write(contentNodes.outerHTML);\r\n      domDoc.close();\r\n      /* remove date/time from top */\r\n      const defaultPageStyle = pageStyle === undefined\r\n        ? '@page { size: A4;  margin: 0mm; } @media print { body { -webkit-print-color-adjust: exact; }  .printSheet { overflow: none;  padding-bottom: 5cm !important;  -webkit-print-color-adjust :exact ; color-adjust: exact ; }.footerInSheet {display: inline;  clear: both;  position: absolute; top: 26cm; left: 1.5cm;flex-direction: row;color: #0B333C;}  thead { display: table-row-group; } .changeColor{color-adjust: exact;-webkit-print-color-adjust :exact } .changeColorIfEmptyGrade{color-adjust: exact ;-webkit-print-color-adjust :exact } tr { page-break-inside: avoid;line-height:1 ;text-align: left}  .footerafter {   position: relative; bottom: 30px; right: 30px; display: flex; justify-content: flex-start;  /* Update this */  } .page-break { page-break-before: always;}.page-break2 { page-break-after: always; }.page-break3 { page-break-after: auto;height:20px;} .page-break4 { page-break-before: always;}.noSeparatePage\t{ display: none !important;  }.footer_tbody{white-space: pre;  line-height:1; overflow: visible;  text-overflow: ellipsis;  word-wrap: break-word; }.footerTable{white-space: pre; line-height:1; overflow: visible;  text-overflow: ellipsis; word-wrap: break-word; }table{  text-size-adjust: auto;line-height: 1.2;} tr{ line-height: 1.3;padding: 2px;}}': pageStyle;\r\n\r\n      const styleEl = domDoc.createElement('style');\r\n      styleEl.appendChild(domDoc.createTextNode(defaultPageStyle));\r\n      domDoc.head.appendChild(styleEl);\r\n\r\n      if (bodyClass.length) {\r\n        domDoc.body.classList.add(bodyClass);\r\n      }\r\n\r\n      const canvasEls = domDoc.querySelectorAll('canvas');\r\n      [...canvasEls].forEach((node, index) => {\r\n        node.getContext('2d').drawImage(srcCanvasEls[index], 0, 0);\r\n      });\r\n\r\n      if (copyStyles !== false) {\r\n        const headEls = document.querySelectorAll('style, link[rel=\"stylesheet\"]');\r\n\r\n        [...headEls].forEach((node, index) => {\r\n          if (node.tagName === 'STYLE') {\r\n            const newHeadEl = domDoc.createElement(node.tagName);\r\n\r\n            if (node.sheet) {\r\n              let styleCSS = '';\r\n\r\n              for (let i = 0; i < node.sheet.cssRules.length; i++) {\r\n                //catch 'member not found' error on cssText\r\n                if (typeof node.sheet.cssRules[i].cssText === \"string\") {\r\n                  styleCSS += `${node.sheet.cssRules[i].cssText}\\r\\n`;\r\n                }\r\n              }\r\n\r\n              newHeadEl.setAttribute('id', `react-to-print-${index}`);\r\n              newHeadEl.appendChild(domDoc.createTextNode(styleCSS));\r\n              domDoc.head.appendChild(newHeadEl);\r\n            }\r\n          } else {\r\n            const attributes = [...node.attributes];\r\n\r\n            const hrefAttr = attributes.filter(attr => attr.nodeName === 'href');\r\n            const hasHref = hrefAttr.length ? !!hrefAttr[0].nodeValue : false;\r\n\r\n            // Many browsers will do all sorts of weird things if they encounter an empty `href`\r\n            // tag (which is invalid HTML). Some will attempt to load the current page. Some will\r\n            // attempt to load the page's parent directory. These problems can cause\r\n            // `react-to-print` to stop  without any error being thrown. To avoid such problems we\r\n            // simply do not attempt to load these links.\r\n            if (hasHref) {\r\n              const newHeadEl = domDoc.createElement(node.tagName);\r\n\r\n              attributes.forEach((attr) => {\r\n                newHeadEl.setAttribute(attr.nodeName, attr.nodeValue);\r\n              });\r\n\r\n              newHeadEl.onload = markLoaded.bind(null, newHeadEl, true);\r\n              newHeadEl.onerror = markLoaded.bind(null, newHeadEl, false);\r\n              domDoc.head.appendChild(newHeadEl);\r\n            } else {\r\n              console.warn(\"'react-to-print' encountered a <link> tag with an empty 'href' attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:\", node); // eslint-disable-line no-console\r\n              markLoaded(node, true); // `true` because we've already shown a warning for this\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.linkTotal === 0 || copyStyles === false) {\r\n        this.triggerPrint(printWindow);\r\n      }\r\n    };\r\n\r\n    document.body.appendChild(printWindow);\r\n  }\r\n  }\r\n  setRef = (ref) => {\r\n    this.triggerRef = ref;\r\n  }\r\n  \r\n\r\n  alertIfIeOrEdge() {\r\n    const isIE = window.navigator.userAgent.indexOf('Trident') > -1;\r\n    const isIE7 = window.navigator.userAgent.indexOf('Trident/7.0') > -1;\r\n    const isEdge = window.navigator.userAgent.indexOf('Edge') > -1;\r\n    const isSpartan = window.navigator.userAgent.indexOf('Spartan') > -1;\r\n   \r\n    if (isIE === true) {\r\n      alert(\"Internet Explorer kan ikke printe karakterark. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n\r\n    }\r\n    if (isIE7 === true) {\r\n      alert(\"Internet Explorer kan ikke printe karakterark. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n   \r\n    }\r\n    if (isEdge === true) {\r\n      alert(\"Edge og Internet Explorer kan ikke printe karakterark med de nÃ¸dvendige indstillinger. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n  //  this.reload();\r\n    }\r\n    if (isSpartan === true) {\r\n      alert(\"Edge og Internet Explorer kan ikke printe karakterark med de nÃ¸dvendige indstillinger. Brug f.eks. Chrome, Firefox, Opera eller Safari istedet for.\");\r\n    //  this.reload();\r\n    }\r\n   \r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      trigger,\r\n    } = this.props;\r\n\r\n    return React.cloneElement(trigger(), {\r\n      onClick: this.handlePrint,\r\n      ref: this.setRef,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default ReactToPrint;","//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport { Grid, Menu, Icon, Message } from 'semantic-ui-react'\nimport ReactToPrint from './utils/ReactToPrint';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { written: \"\", header: \"\", message: \"\", visible: false };\n\n  }\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.id]: evt.target.value })\n  }\n  handleDismiss = () => this.setState({ visible: false })\n  handleAbout = () => {\n    let message = <div className=\"englishText\"><p><b>Infernal converter converts latin letters into infernal letters.</b></p>\n      <p>Infernal is dnd language. <a href='https://forgottenrealms.fandom.com/wiki/Infernal_language'>Read here</a> </p>\n\n      <p>This is only for fun and a small gift for my son who is a dungeon master and needed some documents written in infernal for his players to translate.</p>\n\n      <p>I have used the Barazhad Font made by \"Pixel Sagas\" - \"Neale Davidson\". which is shareware so I guess it is okay to use for this non-commercial project.\n        <a href='https://www.fontspace.com/barazhad-font-f20325'>Link to fontspace</a></p>\n\n      <p>Besides using React I have also used react-to-print from this repository <a href='https://github.com/gregnb/react-to-print'>React-to-print</a> which is a great tool for any react project that requires perfect printing.</p> </div>\n    this.setState({ message, visible: true })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h2 className=\"headLine\">Infernal language converter.</h2>\n          <div className=\"font-face-in headLine\">Infernal language converter.\n          </div>\n          <hr></hr></div>\n        <Menu><ReactToPrint\n          trigger={() =>\n            <Menu.Item position=\"right\" bordered color=\"white\">Print&nbsp; <Icon color=\"grey\" name=\"print\" /></Menu.Item>}\n          content={() => this.forwardRef}\n        />\n          <Menu.Item onClick={this.handleAbout}>About</Menu.Item>\n        </Menu>\n        {window.outerWidth > 800 && <Grid columns=\"16\">\n          <Grid.Row >\n            <Grid.Column width=\"5\">\n              <div className=\"englishText\">\n                <p>Input header</p>\n                <input type=\"text\" defaultValue={this.state.header} onChange={this.handleChange} id=\"header\" />\n                <br></br><br></br>\n                <p>Input text</p>\n                <textarea onChange={this.handleChange} defaultValue={this.state.written} id=\"written\" /></div></Grid.Column>\n            <Grid.Column width=\"11\">\n              {this.state.visible && <Message\n                compact\n                onDismiss={this.handleDismiss}\n                header='About this app'\n                content={this.state.message}\n              />}\n              <div className=\"hasToLookLikePaper\"><div ref={el => (this.forwardRef = el)}><div className=\"font-face-in\"><h2 >{this.state.header}</h2>\n                {this.state.written}</div>\n                <div className=\"pagebreak\"><span className=\"font-face-normal\"><h2 >{this.state.header}</h2>\n                  {this.state.written}</span></div></div></div>\n            </Grid.Column></Grid.Row></Grid>}\n        {window.outerWidth <= 800 && <Grid columns=\"1\">\n          <Grid.Row>\n            <div className=\"englishText\">\n              <p>Input header</p>\n              <input type=\"text\" defaultValue={this.state.header} onChange={this.handleChange} id=\"header\" />\n              <br></br><br></br>\n              <p>Input text</p>\n              <textarea onChange={this.handleChange} defaultValue={this.state.written} id=\"written\" /></div></Grid.Row>\n          <Grid.Row>\n            {this.state.visible && <Message\n              onDismiss={this.handleDismiss}\n              header='About this app'\n              content={this.state.message}\n            />}\n            <div className=\"hasToLookLikePaper\"><div ref={el => (this.forwardRef = el)}><div className=\"font-face-in\"><h2 >{this.state.header}</h2>\n              {this.state.written}</div>\n              <div className=\"pagebreak\"><span className=\"font-face-normal\"><h2 >{this.state.header}</h2>\n                {this.state.written}</span></div></div></div>\n          </Grid.Row></Grid>}\n      </div>\n    );\n  }\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/BarazhadBold-LGZZ.9ed9bcf8.ttf\";","export default __webpack_public_path__ + \"static/media/BarazhadBoldItalic-XMWd.fdb12455.ttf\";","export default __webpack_public_path__ + \"static/media/Barazhad-PlXr.80f7f314.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\n\nimport './fonts/barazhad-font/BarazhadBold-LGZZ.ttf';\nimport './fonts/barazhad-font/BarazhadBoldItalic-XMWd.ttf';\nimport './fonts/barazhad-font/Barazhad-PlXr.ttf';\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}